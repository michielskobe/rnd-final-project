-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc/shelf_cascade/Subsystem1.vhd
-- Created: 2024-11-15 15:51:59
-- 
-- Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem1
-- Source Path: shelf_cascade/Subsystem16/Subsystem1
-- Hierarchy Level: 2
-- Model version: 1.20
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Subsystem1 IS
  PORT( K                                 :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En23
        V                                 :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En23
        alpha2K_not_ascii_V_2V_1_2        :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En23
        K_not_ascii_V_2V_1_1              :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En23
        alpha2K_V_1                       :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En23
        );
END Subsystem1;


ARCHITECTURE rtl OF Subsystem1 IS

  -- Signals
  SIGNAL K_signed                         : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL V_signed                         : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Product8_mul_temp                : signed(53 DOWNTO 0);  -- sfix54_En46
  SIGNAL V_not_ascii                      : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Constant8_out1                   : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Product9_mul_temp                : signed(53 DOWNTO 0);  -- sfix54_En46
  SIGNAL alpha2V                          : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Sum5_stage2_add_cast             : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum5_stage2_add_cast_1           : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum5_stage2_add_temp             : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum5_op_stage1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL Product_mul_temp                 : signed(53 DOWNTO 0);  -- sfix54_En46
  SIGNAL K_not_ascii                      : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Constant9_out1                   : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Sum5_stage3_add_cast             : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum5_stage3_add_cast_1           : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL V_not_ascii_2V_1                 : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Product10_mul_temp               : signed(58 DOWNTO 0);  -- sfix59_En46
  SIGNAL K_not_ascii_V_2V_1               : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Constant13_out1                  : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Product11_mul_temp               : signed(53 DOWNTO 0);  -- sfix54_En46
  SIGNAL alpha2K_not_ascii_V_2V_1         : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Constant11_out1                  : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Sum7_sub_cast                    : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum7_sub_cast_1                  : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL alpha2K_not_ascii_V_2V_1_2_tmp   : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Constant10_out1                  : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Sum6_add_cast                    : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum6_add_cast_1                  : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL K_not_ascii_V_2V_1_1_tmp         : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Constant6_out1                   : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Product6_mul_temp                : signed(53 DOWNTO 0);  -- sfix54_En46
  SIGNAL alpha2K                          : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Constant7_out1                   : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL Sum3_add_cast                    : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum3_add_cast_1                  : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL V_1                              : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Product7_mul_temp                : signed(58 DOWNTO 0);  -- sfix59_En46
  SIGNAL alpha2K_V_1_tmp                  : signed(26 DOWNTO 0);  -- sfix27_En23

BEGIN
  K_signed <= signed(K);

  V_signed <= signed(V);

  Product8_mul_temp <= V_signed * V_signed;
  V_not_ascii <= Product8_mul_temp(49 DOWNTO 23);

  Constant8_out1 <= to_signed(16#1000000#, 27);

  Product9_mul_temp <= V_signed * Constant8_out1;
  alpha2V <= Product9_mul_temp(49 DOWNTO 23);

  Sum5_stage2_add_cast <= resize(V_not_ascii, 32);
  Sum5_stage2_add_cast_1 <= resize(alpha2V, 32);
  Sum5_stage2_add_temp <= Sum5_stage2_add_cast + Sum5_stage2_add_cast_1;
  Sum5_op_stage1 <= Sum5_stage2_add_temp(27 DOWNTO 0);

  Product_mul_temp <= K_signed * K_signed;
  K_not_ascii <= Product_mul_temp(49 DOWNTO 23);

  Constant9_out1 <= to_signed(16#0800000#, 27);

  Sum5_stage3_add_cast <= resize(Sum5_op_stage1, 32);
  Sum5_stage3_add_cast_1 <= resize(Constant9_out1, 32);
  V_not_ascii_2V_1 <= Sum5_stage3_add_cast + Sum5_stage3_add_cast_1;

  Product10_mul_temp <= K_not_ascii * V_not_ascii_2V_1;
  K_not_ascii_V_2V_1 <= Product10_mul_temp(49 DOWNTO 23);

  Constant13_out1 <= to_signed(16#1000000#, 27);

  Product11_mul_temp <= K_not_ascii_V_2V_1 * Constant13_out1;
  alpha2K_not_ascii_V_2V_1 <= Product11_mul_temp(49 DOWNTO 23);

  Constant11_out1 <= to_signed(16#1000000#, 27);

  Sum7_sub_cast <= resize(alpha2K_not_ascii_V_2V_1, 32);
  Sum7_sub_cast_1 <= resize(Constant11_out1, 32);
  alpha2K_not_ascii_V_2V_1_2_tmp <= Sum7_sub_cast - Sum7_sub_cast_1;

  alpha2K_not_ascii_V_2V_1_2 <= std_logic_vector(alpha2K_not_ascii_V_2V_1_2_tmp);

  Constant10_out1 <= to_signed(16#0800000#, 27);

  Sum6_add_cast <= resize(K_not_ascii_V_2V_1, 32);
  Sum6_add_cast_1 <= resize(Constant10_out1, 32);
  K_not_ascii_V_2V_1_1_tmp <= Sum6_add_cast + Sum6_add_cast_1;

  K_not_ascii_V_2V_1_1 <= std_logic_vector(K_not_ascii_V_2V_1_1_tmp);

  Constant6_out1 <= to_signed(16#1000000#, 27);

  Product6_mul_temp <= K_signed * Constant6_out1;
  alpha2K <= Product6_mul_temp(49 DOWNTO 23);

  Constant7_out1 <= to_signed(16#0800000#, 27);

  Sum3_add_cast <= resize(Constant7_out1, 32);
  Sum3_add_cast_1 <= resize(V_signed, 32);
  V_1 <= Sum3_add_cast + Sum3_add_cast_1;

  Product7_mul_temp <= alpha2K * V_1;
  alpha2K_V_1_tmp <= Product7_mul_temp(49 DOWNTO 23);

  alpha2K_V_1 <= std_logic_vector(alpha2K_V_1_tmp);

END rtl;

